# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Auto Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    # 설정파일 설정
    - uses: franzbischoff/replace_envs@v1
    - name: Set properties
      env:
        DB_HOST: ${{ secrets.DB_HOST }}
        DB_PORT: ${{ secrets.DB_PORT }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USERNAME : ${{ secrets.DB_USERNAME }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        AES_KEY: ${{ secrets.AES_KEY }}
        AES_IV: ${{ secrets.AES_IV }}
        RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
      with:
        from_file: 'src/main/resources/application.properties'
        to_file: 'src/main/resources/application.properties'
        commit: 'false'
    # 실제 빌드
    - name: Build with Maven
      run: mvn compile war:war

    # 서버에 업로드
    - uses: actions/checkout@master
    - name: File upload at server
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        source: "target/ROOT.war"
        target: "/docker/storyclip-api/webapps/"
